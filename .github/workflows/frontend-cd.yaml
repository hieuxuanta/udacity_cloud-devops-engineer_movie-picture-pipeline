name: Frontend Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  run-lint-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Clean install dependencies
      run: cd starter/frontend && npm ci

    - name: Run linting jobs
      run: cd starter/frontend && npm run lint --fix

  run-test-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Clean install dependencies
      run: cd starter/frontend && npm ci

    - name: Run testing jobs
      run: cd starter/frontend && npm run test
      continue-on-error: false

  post-build-job:
    needs: [run-lint-job, run-test-job]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Clean install dependencies
      run: cd starter/frontend && npm ci

    - name: Run testing jobs
      run: cd starter/frontend && npm run test
      continue-on-error: false

    - name: Build Docker image
      run: cd starter/frontend && docker build -t movie-picture-frontend --build-arg REACT_APP_MOVIE_API_URL=http://localhost:3000 .

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd starter/frontend
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
