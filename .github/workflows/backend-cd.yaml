name: Backend Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master

jobs:
  run-lint-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: cd starter/backend && pipenv install

    - name: Run linting jobs
      run: cd starter/backend && pipenv run lint

  run-test-job:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: cd starter/backend && pipenv install

    - name: Run testing jobs
      run: cd starter/backend && pipenv run test
      continue-on-error: false

  post-build-job:
    needs: [run-lint-job, run-test-job]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Use Node.js 16
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install dependencies
      run: cd starter/backend && pipenv install

    - name: Run testing jobs
      run: cd starter/backend && pipenv run test
      continue-on-error: false

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd starter/backend
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

    - name: Deploy Kubernetes manifests
      env:
        ECR_REPO_URL: 047990169518.dkr.ecr.us-east-1.amazonaws.com/backend
        NEW_IMAGE_TAG: ${{ github.sha }}
      run: |
        cd starter/backend/k8s
        aws eks update-kubeconfig
        kustomize edit set image backend=$ECR_REPO_URL:$NEW_IMAGE_TAG
        kustomize build | kubectl apply -f -
        kubectl get svc